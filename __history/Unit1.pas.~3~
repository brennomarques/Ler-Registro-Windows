unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Registry, Vcl.StdCtrls, Vcl.ComCtrls, Vcl.Buttons;

type
  TForm1 = class(TForm)
    BitBtn1: TBitBtn;
    ListView1: TListView;
    function ProgramaInstalado(Programa: string): String;
    procedure BitBtn1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}
function TForm1.ProgramaInstalado(Programa: string): String;
Var
  List: TStringList;
  Registry: TRegistry;
  i: Integer;
  DisplayName: String;
begin
  Registry := TRegistry.Create;
  List := TStringList.Create;
  try
    with Registry do
    begin
      RootKey := HKEY_LOCAL_MACHINE;

      if OpenKey('Software\Microsoft\Windows\CurrentVersion\Uninstall', False) Then
      Begin
        GetKeyNames(List);
        CloseKey;
      End;

      for i := 0 to List.Count - 1 do
      begin
        RootKey := HKEY_LOCAL_MACHINE;
        OpenKey('Software\Microsoft\Windows\CurrentVersion\Uninstall\' + List[i], False);
        DisplayName := ReadString('DisplayName');
        CloseKey;

        if pos(AnsiUpperCase(Programa), AnsiUpperCase(DisplayName)) > 0 then
        begin
          Result := DisplayName;
          exit;
        end;
      End;
    end;
  Finally
    Registry.Free;
    List.Free;
  end;
end;
procedure TForm1.BitBtn1Click(Sender: TObject);
const
  UNINST_PATH = 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall';
var
  Registro: TRegistry;
  Chaves: TStringList;
  xListItem: TlistItem;
  I: integer;
  xNomeSoftware, xCaminhoRemover: string;
begin

  ListView1.ViewStyle := vsReport;
  ListView1.Columns.add;
  ListView1.Columns.add;
  ListView1.Columns[0].caption := 'Nome do Programa';
  ListView1.Columns[1].caption := 'Caminho pra Remover';
  ListView1.Columns[0].Width := 300;
  ListView1.Columns[1].Width := 300;

  Registro := TRegistry.Create;
  with Registro do
    try
      with ListView1.Items do
        try
          BeginUpdate;
          Clear;
          RootKey := HKEY_LOCAL_MACHINE;
          if OpenKeyReadOnly(UNINST_PATH) then
          begin
            Chaves := TStringList.Create;
            try
              GetKeyNames(Chaves);
              CloseKey;
              for I := 0 to Chaves.Count - 1 do
                if OpenKeyReadOnly(Format('%s\%s', [UNINST_PATH, Chaves[I]])) then
                  try
                    xNomeSoftware   := ReadString('DisplayName');
                    xCaminhoRemover := ReadString('UninstallString');
                    if xNomeSoftware <> '' then
                    begin
                      xListItem         := Add;
                      xListItem.Caption := xNomeSoftware;
                      xListItem.subitems.Add(xCaminhoRemover);
                      if xNomeSoftware ='erLT' then
                      begin
                        ShowMessage('Tem java');
                      end;
                    end;
                  finally
                    CloseKey;
                  end;
            finally
              Chaves.Free;
            end;
          end;
        finally
          ListView1.AlphaSort;
          EndUpdate;
        end;
    finally
      CloseKey;
      Free;
    end;
end;

end.
